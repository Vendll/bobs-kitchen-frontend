{"version":3,"file":"index.js","sources":["../src/components/AspectRatioBox.tsx","../src/components/Iightbox.tsx","../src/components/ImagesGrid.tsx"],"sourcesContent":["import { Box } from '@mui/material';\nimport React, { Fragment, FunctionComponent } from 'react';\n\ninterface IAspectRatioBoxProps {\n  ratio?: number;\n}\n\nconst AspectRatioBox: FunctionComponent<IAspectRatioBoxProps> = ({ children, ratio }) => {\n  if (!ratio) {\n    return <Fragment>{children}</Fragment>;\n  }\n  return (\n    <Box position={'relative'}>\n      <Box\n        position={'absolute'}\n        top={0}\n        left={0}\n        right={0}\n        bottom={0}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        //@ts-ignore\n        style={{ '& > *': { height: '100%', width: '100%' } }}\n      >\n        {children}\n      </Box>\n      <Box style={{ paddingBottom: (1 / ratio) * 100 + '%' }} />\n    </Box>\n  );\n};\n\nexport default AspectRatioBox;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport React, { forwardRef, ForwardRefRenderFunction, Fragment, useImperativeHandle, useState } from 'react';\nimport ReactImageLightBox from 'react-image-lightbox';\nimport { IImage } from './ImagesGrid';\n\ntype IRef = {\n  open(index: number): void;\n};\n\ninterface IProps {\n  images: IImage[];\n  reactModalStyle?: unknown;\n}\n\nconst LightBox: ForwardRefRenderFunction<IRef, IProps> = ({ images, reactModalStyle }, ref) => {\n  const [currentIndex, setCurrentIndex] = useState<null | number>(null);\n\n  useImperativeHandle(ref, () => ({\n    open: (index: number) => {\n      setCurrentIndex(index);\n    },\n  }));\n\n  const handleClose = (): void => {\n    setCurrentIndex(null);\n  };\n\n  const handleChangeImage = (direction: 'prev' | 'next') => () => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    setCurrentIndex(prevCurrentIndex => (prevCurrentIndex + direction === 'prev' ? (prevCurrentIndex! + images.length - 1) % images.length : (prevCurrentIndex! + 1) % images.length));\n  };\n\n  if (currentIndex === null) {\n    return <Fragment></Fragment>;\n  }\n\n  return (\n    <div>\n      <ReactImageLightBox\n        //imagePadding={300}\n        imageTitle={images[currentIndex].title}\n        reactModalStyle={reactModalStyle}\n        mainSrc={images[currentIndex].img}\n        nextSrc={images[(currentIndex + 1) % images.length]?.img}\n        prevSrc={images[(currentIndex + images.length - 1) % images.length].img}\n        onCloseRequest={handleClose}\n        onMovePrevRequest={handleChangeImage('prev')}\n        onMoveNextRequest={handleChangeImage('next')}\n      />\n    </div>\n  );\n};\nexport type { IRef as ILightBoxRef };\nexport default forwardRef<IRef, IProps>(LightBox);\n","import { alpha, Card, CardActionArea, CardContent, Grid, styled, Typography } from '@mui/material';\nimport React, { Component, createRef, Fragment, FunctionComponent, ReactNode, RefObject } from 'react';\nimport AspectRatioBox from './AspectRatioBox';\nimport LightBox, { ILightBoxRef } from './Iightbox';\n\n//------------------------------------------------------\n\nconst CoverStyle = styled('img')(() => ({\n  objectFit: 'cover',\n  width: '100%',\n  height: '100%',\n}));\n\nconst MoreHoverStyle = styled(CardContent)(({ theme }) => ({\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'absolute',\n  color: theme.palette.common.white,\n  backgroundColor: alpha(theme.palette.grey[900], 0.6),\n}));\n\n//------------------------------------------------------\n\nenum ORIENTATION {\n  VERTICAL,\n  HORIZONTAL,\n}\n\ntype IImage = { title: string; img: string; imgThumbnail?: string };\n\ninterface IProps {\n  images: IImage[];\n  reactModalStyle?: unknown;\n}\n\ninterface IState {\n  fistImagePosition?: ORIENTATION;\n  lightBox: null | number;\n}\n\nclass ImagesGrid extends Component<IProps, IState> {\n  private _fistImage: RefObject<HTMLImageElement>;\n  private _lightBoxRef: RefObject<ILightBoxRef>;\n\n  constructor(props: IProps) {\n    super(props);\n    this._fistImage = createRef();\n    this._lightBoxRef = createRef();\n    this.state = {\n      fistImagePosition: undefined,\n      lightBox: null,\n    };\n  }\n\n  private _handleImageLoad = (): void => {\n    const fistImageRef = this._fistImage.current;\n    if (!fistImageRef) {\n      return;\n    }\n    const fistImagePosition = fistImageRef.naturalHeight > fistImageRef.naturalWidth ? ORIENTATION.VERTICAL : ORIENTATION.HORIZONTAL;\n    if (fistImagePosition !== this.state.fistImagePosition) {\n      this.setState(prevState => ({\n        ...prevState,\n        fistImagePosition: fistImageRef.naturalHeight > fistImageRef.naturalWidth ? ORIENTATION.VERTICAL : ORIENTATION.HORIZONTAL,\n      }));\n    }\n  };\n\n  private _handleImageClick = (imageIndex: number): void => {\n    this._lightBoxRef.current?.open(imageIndex);\n  };\n\n  private _HoverMoreRender = ({ imageCount }: { imageCount: number }): JSX.Element => {\n    return (\n      <MoreHoverStyle>\n        <Typography variant=\"h4\" component={'span'}>\n          +{imageCount - 5}\n        </Typography>\n      </MoreHoverStyle>\n    );\n  };\n\n  public _OneImageRender: FunctionComponent<{ image: IImage }> = ({ image: { title, img, imgThumbnail } }) => {\n    return (\n      <CardActionArea onClick={() => this._handleImageClick(0)}>\n        <Grid container>\n          <Grid item xs={12}>\n            <CoverStyle alt={title} src={imgThumbnail || img} />\n          </Grid>\n        </Grid>\n      </CardActionArea>\n    );\n  };\n\n  public _TowImageRender: FunctionComponent<{ images: [IImage, IImage] }> = ({ images }) => {\n    return (\n      <Grid container spacing={0.2}>\n        {images.map(({ title, img, imgThumbnail }, index) => (\n          <Grid key={`${index}-${img}`} item xs={6}>\n            <CardActionArea onClick={() => this._handleImageClick(index)}>\n              <AspectRatioBox ratio={1}>\n                <CoverStyle alt={title} src={imgThumbnail || img} />\n              </AspectRatioBox>\n            </CardActionArea>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  };\n\n  public _ThreeAndMoreImageRender: FunctionComponent<{ images: IImage[] }> = ({ images }) => {\n    const imageCount = images.length;\n\n    if (this.state.fistImagePosition === ORIENTATION.HORIZONTAL || imageCount > 4) {\n      return (\n        <Grid container spacing={0.2}>\n          <Grid item xs={12} height={'100%'}>\n            <Grid container spacing={0.2}>\n              {images.slice(0, imageCount < 5 ? 1 : 2).map(({ title, img, imgThumbnail }, index) => (\n                <Grid key={`${index}-${img}`} item xs={imageCount < 5 ? 12 : 6}>\n                  <CardActionArea onClick={() => this._handleImageClick(index)}>\n                    <AspectRatioBox ratio={imageCount < 5 ? undefined : 1}>\n                      <CoverStyle ref={index === 0 ? this._fistImage : undefined} alt={title} src={imgThumbnail || img} onLoad={index === 0 ? this._handleImageLoad : undefined} />\n                    </AspectRatioBox>\n                  </CardActionArea>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={0.2}>\n              {images.slice(imageCount < 5 ? 1 : 2, 5).map(({ title, img, imgThumbnail }, index) => (\n                <Grid key={`${index}-${img}`} item xs={imageCount === 3 ? 6 : 4}>\n                  <CardActionArea onClick={() => this._handleImageClick(index + (imageCount < 5 ? 1 : 2))}>\n                    <AspectRatioBox ratio={1}>\n                      <CoverStyle alt={title} src={imgThumbnail || img} />\n                    </AspectRatioBox>\n                    {index === 2 && imageCount > 5 && this._HoverMoreRender({ imageCount })}\n                  </CardActionArea>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    }\n    const imageFirst = images[0];\n    return (\n      <AspectRatioBox ratio={1}>\n        <Grid container spacing={0.2}>\n          <Grid item xs={imageCount === 3 ? 6 : 8}>\n            <CardActionArea sx={{ height: '100%' }} onClick={() => this._handleImageClick(0)}>\n              <CoverStyle ref={this._fistImage} alt={imageFirst.title} src={imageFirst.imgThumbnail || imageFirst.img} onLoad={this._handleImageLoad} />\n            </CardActionArea>\n          </Grid>\n          <Grid item xs={imageCount === 3 ? 6 : 4}>\n            <Grid container spacing={0.2}>\n              {images.slice(1).map(({ title, img, imgThumbnail }, index) => (\n                <Grid key={`${index}-${img}`} item xs={12}>\n                  <CardActionArea onClick={() => this._handleImageClick(index + 1)}>\n                    <AspectRatioBox ratio={1}>\n                      <CoverStyle alt={title} src={imgThumbnail || img} />\n                    </AspectRatioBox>\n                    {index === 2 && imageCount > 5 && this._HoverMoreRender({ imageCount })}\n                  </CardActionArea>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </AspectRatioBox>\n    );\n  };\n\n  private _SelectorRender = () => {\n    const { _OneImageRender, _TowImageRender, _ThreeAndMoreImageRender } = this;\n    const { images } = this.props;\n    const imageCount = images.length;\n\n    if (imageCount === 1) {\n      return <_OneImageRender image={images[0]} />;\n    } else if (imageCount === 2) {\n      return <_TowImageRender images={images as unknown as [IImage, IImage]} />;\n    } else if (imageCount > 2) {\n      return <_ThreeAndMoreImageRender images={images} />;\n    }\n    return <Fragment></Fragment>;\n  };\n\n  public render(): ReactNode {\n    const { _SelectorRender, _lightBoxRef } = this;\n    const { images, reactModalStyle } = this.props;\n    return (\n      <Card>\n        <_SelectorRender />\n        <LightBox ref={_lightBoxRef} images={images} reactModalStyle={reactModalStyle} />\n      </Card>\n    );\n  }\n}\n\nexport type { IImage };\nexport default ImagesGrid;\n"],"names":["AspectRatioBox","children","ratio","React","Fragment","Box","position","top","left","right","bottom","style","height","width","paddingBottom","LightBox","ref","images","reactModalStyle","useState","currentIndex","setCurrentIndex","useImperativeHandle","open","index","handleClose","handleChangeImage","direction","prevCurrentIndex","length","ReactImageLightBox","imageTitle","title","mainSrc","img","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","forwardRef","CoverStyle","styled","objectFit","MoreHoverStyle","CardContent","theme","display","alignItems","justifyContent","color","palette","common","white","backgroundColor","alpha","grey","ORIENTATION","ImagesGrid","props","fistImageRef","_fistImage","current","fistImagePosition","naturalHeight","naturalWidth","VERTICAL","HORIZONTAL","state","setState","prevState","imageIndex","_lightBoxRef","imageCount","Typography","variant","component","image","imgThumbnail","CardActionArea","onClick","_handleImageClick","Grid","container","item","xs","alt","src","spacing","map","key","slice","undefined","onLoad","_handleImageLoad","_HoverMoreRender","imageFirst","sx","_OneImageRender","_TowImageRender","_ThreeAndMoreImageRender","createRef","lightBox","render","_SelectorRender","Card","Component"],"mappings":"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"}